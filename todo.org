* DONE Write the command line prompt
** DONE make prompt configurable
** DONE Make it easier to call command from repl: call "help like this"
Split out the string in the call function, rather than in the prompt! function
** DONE check arity when calling commands
** DONE make help work correctly (print the doc string)
** DONE Define a test case for the line parser
** DONE ignore empty command (regexp)
* DONE Set up Marginalia to work with project
** DONE Find a way to automatically push to gh-pages
** DONE Blog about it
* DONE Log in and set up api
** DONE Tidy up the xml parsing - use zipper?
** DONE prompt for api key on startup
*** DONE store the api key in home directory
** DONE Store the api key in home directory file
** DONE Write the get authorisation token method
*** DONE Test getting token when not authorised
Doesn't work - get a message "Did you authenticate"
*** DONE Now authorise the app and test again
this works
(def my-frob (request-authorization))
(rtm-auth-getToken my-frob)
*** DONE Now try restarting the app and getting a token - is the authorisation remembered? I think it should be.
The frob needs to be authorized, and then you can get the token. Seems
like that will be every time the app is run.
** DONE Parse the xml on the get token method
** DONE Write the check token method
** DONE Store the fact that the app has been authorized in state and, if so, don't bother opening the browser
Test this by revoking auth on web-app (currently revoked - make the
check token work first)
This doesn't work
** DONE Prompt for username and password - not needed?
Not needed
** DONE Authenticate against the rtm api
** DONE Throw an exception if api key etc not set? Catch at repl?
* DONE Display all lists
* DONE Command to pull back all tasks for a list
** DONE All tasks
** DONE Tasks for particular list
** DONE With filter

* TODO Write a list command which lists all the lists from the prompt
* TODO Add arg which displays all tasks in a list
So:
list - displays all lists, with a number
list 0 - shows all the tasks for that list
* TODO Make the prompt more general - pass in a validation function which is run immediately?
* TODO Write macro for registering a command
* TODO Provide a way to set up aliases
So can have short commands all mapped to same
** TODO Incorporate into macro??
** TODO For example, once have a way to search can save that as an alias
* TODO Status command - display the current status (logged in etc)
* TODO Provide a command to change the prompt
* TODO Make the api reusable for other people
** TODO Don't have it just print error. Throw exceptions etc.
** TODO Remove all println from the api part
* TODO Remove the dependency on the monolithic clojure contrib, if possible
http://dev.clojure.org/display/doc/Clojure+Contrib
