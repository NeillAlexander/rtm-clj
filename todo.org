* DONE Write the command line prompt
** DONE make prompt configurable
** DONE Make it easier to call command from repl: call "help like this"
Split out the string in the call function, rather than in the prompt! function
** DONE check arity when calling commands
** DONE make help work correctly (print the doc string)
** DONE Define a test case for the line parser
** DONE ignore empty command (regexp)
* DONE Set up Marginalia to work with project
** DONE Find a way to automatically push to gh-pages
** DONE Blog about it
* TODO Log in and set up api
** DONE Tidy up the xml parsing - use zipper?
** DONE prompt for api key on startup
*** DONE store the api key in home directory
** DONE Store the api key in home directory file
** TODO Write the get authorisation token method
*** TODO Test getting token when not authorised
*** TODO Now authorise the app and test again
*** TODO Now try restarting the app and getting a token - is the authorisation remembered? I think it should be.
** TODO Write the check token method
** TODO Prompt for username and password - not needed?
** TODO Authenticate against the rtm api
** TODO Throw an exception if api key etc not set? Catch at repl?
* TODO Handle api responses correctly - return error codes
* TODO Make the prompt more general - pass in a validation function which is run immediately?
* TODO Write the api to pull back initial data
Test it manually
* TODO Write macro for registering a command
* TODO Provide a way to set up aliases
So can have short commands all mapped to same
** TODO Incorporate into macro??
** TODO For example, once have a way to search can save that as an alias
* TODO Status command - display the current status (logged in etc)
* TODO Provide a command to change the prompt
* TODO Make the api reusable for other people
** TODO Don't have it just print error. Throw exceptions etc.
** TODO Remove all println from the api part
* TODO Remove the dependency on the monolithic clojure contrib, if possible
http://dev.clojure.org/display/doc/Clojure+Contrib
